type User {
  id: ID!
  email: String!
  profile: Profile
  registeredAt: DateTime
  lastLogonAt: DateTime
}

type Profile {
  firstName: String!
  lastName: String!
}

type RegisterUserErrors {
  email: String
  password: String
}


type UpdateProfileErrors {
  firstName: String
  lastName: String
}

type UpdateProfileResponse {
  success: Boolean
  message: String
}

input UpdateProfileInput {
  firstName: String!
  lastName: String!
}

type UserList {
  rows: [User]!
  count: Int!
}

type Mutation {
  updateProfile (input: UpdateProfileInput!) : UpdateProfileResponse!
}

type Query {
  me: User!
  user (id: ID!) : User!
  users : UserList!
}
